<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

	<!-- **************************************************** -->
	<!-- ***************** AOP & TX CONFIG ****************** -->
	<!-- **************************************************** -->

	<context:annotation-config />
	<context:component-scan base-package="de.juwimm.cms" />

	<aop:config proxy-target-class="false">
		<aop:pointcut id="hourCachePointcut" expression="@annotation(de.juwimm.cms.common.annotation.HourCache)" />
		<aop:pointcut id="webserviceSpring" expression="execution(* de.juwimm.cms.beans.WebServiceSpring+.*(..))" />
		<aop:pointcut id="clientService" expression="execution(* de.juwimm.cms.remote.ClientServiceSpring+.*(..))" />
		<aop:pointcut id="contentService" expression="execution(* de.juwimm.cms.remote.ContentServiceSpring+.*(..))" />
		<aop:pointcut id="editionCronServicePointcut" expression="execution(* de.juwimm.cms.beans.EditionCronService+.*(..))" /> 
		<aop:advisor advice-ref="nanoCacheInterceptor" pointcut-ref="webserviceSpring" />
		<aop:advisor advice-ref="hourCacheInterceptor" pointcut-ref="hourCachePointcut" />
		<aop:advisor advice-ref="noTxAdvice" pointcut-ref="webserviceSpring" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="clientService" />
		<aop:advisor advice-ref="txTimeoutAdvice" pointcut-ref="contentService" />
		<aop:advisor advice-ref="txTimeoutAdvice" pointcut-ref="editionCronServicePointcut" /> 
	</aop:config>

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" />
 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="java.lang.Exception" isolation="READ_COMMITTED" propagation="REQUIRED" />
			<tx:method name="cronEditionImport*" rollback-for="java.lang.Exception" isolation="SERIALIZABLE"/> 
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<tx:advice id="txTimeoutAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="exportEdition*" rollback-for="java.lang.Exception" isolation="SERIALIZABLE" propagation="REQUIRED" timeout="86400" />
			<tx:method name="getDocument*" timeout="3600" />
			<tx:method name="getPictureData*" timeout="3600" />
			<tx:method name="importDocument*" rollback-for="java.lang.Exception" timeout="18000" isolation="SERIALIZABLE" />
			<tx:method name="importEdition*" rollback-for="java.lang.Exception" timeout="86400" isolation="SERIALIZABLE" />
		</tx:attributes>
	</tx:advice>

	<tx:advice id="noTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="NEVER" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache-conquest.xml</value>
		</property>
	</bean>
	<!--
		please note: http://galaxy.andromda.org/forum/viewtopic.php?t=3393
	-->
	<bean id="hourCacheInterceptor" class="de.juwimm.cms.common.beans.MethodCacheInterceptor" p:cacheManager-ref="cacheManager" p:defaultCacheName="hourCache" />
	<bean id="nanoCacheInterceptor" class="de.juwimm.cms.common.beans.MethodCacheInterceptor" p:cacheManager-ref="cacheManager" p:defaultCacheName="nanoCache" />

	<!-- **************************************************** -->
	<!-- ***************** GENERAL BEANS ******************** -->
	<!-- **************************************************** -->
	<context:property-placeholder location="classpath:conquest.properties" />
	<context:property-override location="classpath:/conquest.properties" />

	<bean id="xmlDbFactory" class="de.juwimm.cms.search.xmldb.XmlDbFactory" lazy-init="true" />
	<bean id="xmlDb" factory-bean="xmlDbFactory" factory-method="getInstance" lazy-init="true" />

	<bean id="conQuestSqlDaoSpring" class="de.juwimm.cms.beans.foreign.ConQuestSqlDaoSpringImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="blobJdbcDao" class="de.juwimm.cms.model.BlobJdbcDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="searchengineService" class="de.juwimm.cms.search.beans.SearchengineService">
		<property name="viewComponentHbmDao" ref="viewComponentHbmDao" />
		<property name="documentHbmDao" ref="documentHbmDao" />
		<property name="siteHbmDao" ref="siteHbmDao" />
		<property name="contentHbmDao" ref="contentHbmDao" />
		<property name="viewDocumentHbmDao" ref="viewDocumentHbmDao" />
		<property name="unitHbmDao" ref="unitHbmDao" />
	</bean>
	<bean id="searchengineDeleteService" class="de.juwimm.cms.search.beans.SearchengineDeleteService" />

	<bean id="cqPropertiesBeanSpring" class="de.juwimm.cms.beans.foreign.CqPropertiesBeanSpring" lazy-init="false" scope="singleton" />
	<bean id="editionCronService" class="de.juwimm.cms.beans.EditionCronService"
		p:editionHbmDao-ref="editionHbmDao"
		p:editionServiceSpring-ref="editionServiceSpring"/>
	<bean id="searchCronService" class="de.juwimm.cms.beans.SearchCronService"
		p:searchengineService-ref="searchengineService"
		p:cqPropertiesBeanSpring-ref="cqPropertiesBeanSpring"
		p:contentHbmDao-ref="contentHbmDao"
		p:documentHbmDao-ref="documentHbmDao"/>
	<bean id="webServiceSpring" class="de.juwimm.cms.beans.WebServiceSpring" />

	<!-- **************************************************** -->
	<!-- ******************* JMX BEANS ********************** -->
	<!-- **************************************************** -->
	<bean id="jmxBeanSearchengineIndexer" class="de.juwimm.cms.beans.jmx.SearchIndex">
		<property name="enabled" value="%%%cqPropertiesBeanSpring.search.indexerEnabled%%%" />
	</bean>

	<bean id="searchengineIndexerCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="searchCronService" />
				<property name="targetMethod" value="cronRunSearchIndexer" />
			</bean>
		</property>
		<property name="cronExpression" value="%%%cqPropertiesBeanSpring.search.indexerCronExpression%%%" />
	</bean>

	<bean id="logfileCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="logfileServiceSpring" />
				<property name="targetMethod" value="startParsing" />
			</bean>
		</property>
		<property name="cronExpression" value="%%%cqPropertiesBeanSpring.logfile.cronExpression%%%" />
	</bean>

	<bean id="editionCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="editionCronService" />
				<property name="targetMethod" value="cronEditionImport" />
			</bean>
		</property>
		<property name="cronExpression" value="%%%cqPropertiesBeanSpring.editionCronExpression%%%" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="logfileCronTrigger" />
				<ref bean="searchengineIndexerCronTrigger" />
				<ref bean="editionCronTrigger" />
			</list>
		</property>
	</bean>
	<!-- **************************************************** -->
	<!-- ****************** JMX Exporter ******************** -->
	<!-- **************************************************** -->
	<!--
		<bean id="jmxMbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> <property name="locateExistingServerIfPossible" value="true"/>
		</bean> Sometimes this wont work on some jboss servers (exposed JMX beans are not found). Maybe some rework needs to be done here. For now the "locateJBoss"
		is working. http://www.jboss.org/community/wiki/FindMBeanServer
	-->
	<bean id="jmxMbeanServer" class="org.jboss.mx.util.MBeanServerLocator" factory-method="locateJBoss" />

	<bean id="jmxAnnotationAttributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />

	<bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
		<property name="namingStrategy">
			<bean class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
				<property name="attributeSource" ref="jmxAnnotationAttributeSource" />
			</bean>
		</property>
		<property name="assembler">
			<bean class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
				<property name="attributeSource" ref="jmxAnnotationAttributeSource" />
			</bean>
		</property>
		<property name="server" ref="jmxMbeanServer" />
		<property name="autodetect" value="true" />
	</bean>

	<!-- **************************************************** -->
	<!-- ****************** COCOON BEANS ******************** -->
	<!-- **************************************************** -->
	<bean id="springPluginServerClassloadingHelper" class="de.juwimm.cms.beans.SpringPluginServerClassloadingHelper" />

	<bean id="pluginCache" class="de.juwimm.cms.beans.cocoon.PluginCache" scope="singleton" init-method="renewCacheFromDcf" lazy-init="false">
		<property name="webServiceSpringBean" ref="webServiceSpring" />
	</bean>
	<bean id="pluginCacheAccessorBean" class="de.juwimm.cms.beans.cocoon.PluginCacheAccessor" scope="prototype" />
	<bean id="pluginCacheAccessorPool" class="org.springframework.aop.target.CommonsPoolTargetSource">
		<property name="targetBeanName">
			<value>pluginCacheAccessorBean</value>
		</property>
	</bean>
	<bean id="pluginCacheAccessor" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource" ref="pluginCacheAccessorPool" />
	</bean>
	<bean id="modifiedDateContentHandler" destroy-method="destroy" class="de.juwimm.cms.beans.cocoon.ModifiedDateContentHandler">
		<property name="pluginCache" ref="pluginCacheAccessor" />
		<property name="webSpringBean" ref="webServiceSpring" />
	</bean>
	<bean id="flowscriptUtils" class="de.juwimm.cms.cocoon.support.FlowscriptUtils">
		<property name="webSpringBean" ref="webServiceSpring" />
	</bean>
	<bean id="conquestMail" class="de.juwimm.cms.cocoon.support.ConquestMail" scope="prototype">
		<property name="webSpringBean" ref="webServiceSpring" />
	</bean>
</beans>
