<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- **************************************************** -->
	<!-- ***************** AOP & TX CONFIG ****************** -->
	<!-- **************************************************** -->

	<context:annotation-config/>
	<context:component-scan base-package="de.juwimm.cms"/>

	<aop:config proxy-target-class="false">
		<aop:pointcut expression="@annotation(de.juwimm.cms.common.annotation.HourCache)" id="hourCachePointcut"/>
		<aop:pointcut expression="execution(* de.juwimm.cms.beans.WebServiceSpring+.*(..))" id="webserviceSpring"/>
		
		<aop:pointcut expression="execution(* de.juwimm.cms.remote.ClientServiceSpring+.*(..))" id="clientService"/>
		<aop:pointcut expression="execution(* de.juwimm.cms.remote.ContentServiceSpring+.*(..))" id="contentService"/>
		<aop:pointcut expression="execution(* de.juwimm.cms.beans.EditionCronService+.*(..))" id="editionCronServicePointcut"/>
		<aop:pointcut expression="execution(* de.juwimm.cms.authorization.remote.AuthorizationServiceSpring+.*(..))" id="authorizationServicePointcut"/>
		<aop:advisor advice-ref="nanoCacheInterceptor" pointcut-ref="webserviceSpring"/>
		<aop:advisor advice-ref="hourCacheInterceptor" pointcut-ref="hourCachePointcut"/>
		<aop:advisor advice-ref="noTxAdvice" pointcut-ref="webserviceSpring"/>
		
		<aop:advisor advice-ref="txAdvice" pointcut-ref="clientService"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="editionCronServicePointcut"/>
		<aop:advisor advice-ref="txAdviceRemoteLogin" pointcut-ref="authorizationServicePointcut"/>
		<aop:advisor advice-ref="txTimeoutAdvice" pointcut-ref="contentService"/>
		<aop:advisor advice-ref="txTimeoutAdvice" pointcut-ref="editionCronServicePointcut"/>
	</aop:config>

	<tx:annotation-driven proxy-target-class="false" transaction-manager="transactionManager"/>

	<tx:advice id="txAdviceRemoteLogin" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method isolation="SERIALIZABLE" name="remoteLogin" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method isolation="READ_COMMITTED" name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method isolation="SERIALIZABLE" name="cronEditionImport*" rollback-for="java.lang.Exception"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<tx:advice id="txTimeoutAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method isolation="SERIALIZABLE" name="exportEdition*" propagation="REQUIRED" rollback-for="java.lang.Exception" timeout="86400"/>
			<tx:method name="getDocument*" timeout="3600"/>
			<tx:method name="getPictureData*" timeout="3600"/>
			<tx:method isolation="SERIALIZABLE" name="importDocument*" rollback-for="java.lang.Exception" timeout="18000"/>
			<tx:method isolation="SERIALIZABLE" name="importEdition*" rollback-for="java.lang.Exception" timeout="86400"/>
		</tx:attributes>
	</tx:advice>

	<tx:advice id="noTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="NEVER" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" id="cacheManager">
		<property name="configLocation">
			<value>classpath:ehcache-conquest.xml</value>
		</property>
	</bean>
	<!--
		please note: http://galaxy.andromda.org/forum/viewtopic.php?t=3393
	-->
	<bean class="de.juwimm.cms.common.beans.MethodCacheInterceptor" id="hourCacheInterceptor" p:cacheManager-ref="cacheManager" p:defaultCacheName="hourCache"/>
	<bean class="de.juwimm.cms.common.beans.MethodCacheInterceptor" id="nanoCacheInterceptor" p:cacheManager-ref="cacheManager" p:defaultCacheName="nanoCache"/>

	<!-- **************************************************** -->
	<!-- ***************** GENERAL BEANS ******************** -->
	<!-- **************************************************** -->
	<context:property-placeholder location="classpath:tizzit.properties"/>
	<context:property-override location="classpath:/tizzit.properties"/>

	<bean class="de.juwimm.cms.search.xmldb.XmlDbFactory" id="xmlDbFactory" lazy-init="true"/>
	<bean factory-bean="xmlDbFactory" factory-method="getInstance" id="xmlDb" lazy-init="true"/>

	<bean class="de.juwimm.cms.beans.foreign.TizzitSqlDaoSpringImpl" id="tizzitSqlDaoSpring">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean class="de.juwimm.cms.beans.BlobJdbcDao" id="blobJdbcDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean class="de.juwimm.cms.search.beans.SearchengineService" id="searchengineService">
		<property name="viewComponentHbmDao" ref="viewComponentHbmDao"/>
		<property name="documentHbmDao" ref="documentHbmDao"/>
		<property name="siteHbmDao" ref="siteHbmDao"/>
		<property name="contentHbmDao" ref="contentHbmDao"/>
		<property name="viewDocumentHbmDao" ref="viewDocumentHbmDao"/>
		<property name="unitHbmDao" ref="unitHbmDao"/>
	</bean>
	<bean class="de.juwimm.cms.search.beans.SearchengineDeleteService" id="searchengineDeleteService"/>
	<bean class="de.juwimm.cms.beans.WebCrawlerService" id="webCrawlerService"/>

	<bean class="de.juwimm.cms.beans.foreign.TizzitPropertiesBeanSpring" id="tizzitPropertiesBeanSpring" lazy-init="false" scope="singleton"/>
	<bean class="de.juwimm.cms.beans.EditionCronService" id="editionCronService" p:contentServiceSpring-ref="contentServiceSpring" p:editionHbmDao-ref="editionHbmDao"
		p:editionServiceSpring-ref="editionServiceSpring" p:userHbmDao-ref="userHbmDao"/>
	<bean class="de.juwimm.cms.beans.ExternalSitesCronService" id="externalSitesCronService" p:siteHbmDao-ref="siteHbmDao" p:webCrawler-ref="webCrawlerService"/>
	<bean class="de.juwimm.cms.beans.SearchCronService" id="searchCronService" p:contentHbmDao-ref="contentHbmDao" p:tizzitPropertiesBeanSpring-ref="tizzitPropertiesBeanSpring"
		p:documentHbmDao-ref="documentHbmDao" p:searchengineService-ref="searchengineService"/>
	<bean class="de.juwimm.cms.beans.WebServiceSpring" id="webServiceSpring"/>

	<!-- **************************************************** -->
	<!-- ******************* JMX BEANS ********************** -->
	<!-- **************************************************** -->
	<bean class="de.juwimm.cms.beans.jmx.SearchIndex" id="jmxBeanSearchengineIndexer">
		<property name="enabled" value="%%%tizzitPropertiesBeanSpring.search.indexerEnabled%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="searchengineIndexerCronTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="searchCronService"/>
				<property name="targetMethod" value="cronRunSearchIndexer"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.search.indexerCronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="logfileCronTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="logfileServiceSpring"/>
				<property name="targetMethod" value="startParsing"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.logfile.cronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="editionCronDeployTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="editionCronService"/>
				<property name="targetMethod" value="cronEditionDeploy"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.editionCronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="editionCronImportTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="editionCronService"/>
				<property name="targetMethod" value="cronEditionImport"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.editionCronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="deployStatusUpdaterTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="editionCronService"/>
				<property name="targetMethod" value="cronUpdateDeployStatus"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.updateDeployStatusCronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="createEditionFromDeployFileTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="editionCronService"/>
				<property name="targetMethod" value="cronCreateEditionFromDeployFile"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.editionCronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.CronTriggerBean" id="externalSitesTrigger">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="externalSitesCronService"/>
				<property name="targetMethod" value="indexSites"/>
			</bean>
		</property>
		<property name="cronExpression" value="%%%tizzitPropertiesBeanSpring.indexExternalSiteCronExpression%%%"/>
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="logfileCronTrigger"/>
				<ref bean="searchengineIndexerCronTrigger"/>
				<ref bean="editionCronDeployTrigger"/>
				<ref bean="editionCronImportTrigger"/>
				<ref bean="createEditionFromDeployFileTrigger"/>
				<!-- if it a liverserver this cron is not needed -->
				<ref bean="deployStatusUpdaterTrigger"/>
				<ref bean="externalSitesTrigger"/>
			</list>
		</property>
	</bean>
	<!-- **************************************************** -->
	<!-- ****************** JMX Exporter ******************** -->
	<!-- **************************************************** -->
	<!--
		<bean id="jmxMbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> <property name="locateExistingServerIfPossible" value="true"/>
		</bean> Sometimes this wont work on some jboss servers (exposed JMX beans are not found). Maybe some rework needs to be done here. For now the "locateJBoss"
		is working. http://www.jboss.org/community/wiki/FindMBeanServer
	-->
	<bean class="org.jboss.mx.util.MBeanServerLocator" factory-method="locateJBoss" id="jmxMbeanServer"/>

	<bean class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" id="jmxAnnotationAttributeSource"/>

	<bean class="org.springframework.jmx.export.MBeanExporter" id="jmxExporter" lazy-init="false">
		<property name="namingStrategy">
			<bean class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
				<property name="attributeSource" ref="jmxAnnotationAttributeSource"/>
			</bean>
		</property>
		<property name="assembler">
			<bean class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
				<property name="attributeSource" ref="jmxAnnotationAttributeSource"/>
			</bean>
		</property>
		<property name="server" ref="jmxMbeanServer"/>
		<property name="autodetect" value="true"/>
	</bean>

	<!-- **************************************************** -->
	<!-- ****************** COCOON BEANS ******************** -->
	<!-- **************************************************** -->
	<bean class="de.juwimm.cms.beans.PluginManagement" id="pluginManagement" lazy-init="true"/>
	<bean class="de.juwimm.cms.beans.cocoon.ModifiedDateContentHandler" destroy-method="destroy" id="modifiedDateContentHandler" p:pluginManagement-ref="pluginManagement"
		p:webServiceSpring-ref="webServiceSpring"/>

	<bean class="de.juwimm.cms.cocoon.support.FlowscriptUtils" id="flowscriptUtils">
		<property name="webSpringBean" ref="webServiceSpring"/>
	</bean>
	<bean class="de.juwimm.cms.cocoon.support.ConquestMail" id="conquestMail" scope="prototype">
		<property name="webSpringBean" ref="webServiceSpring"/>
	</bean>

<!--	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>-->
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    	<property name="order" value="0" />
  	</bean>
   
</beans>
