<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
  <distributable />
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value> classpath:applicationContext-base-cocoon.xml </param-value>
  </context-param>

  <!-- Servlet Filters ================================================ -->

  <!--
    - Declare a filter for multipart MIME handling
    -->
  <filter>
    <description>Multipart MIME handling filter for Cocoon</description>
    <display-name>Cocoon multipart filter</display-name>
    <filter-name>CocoonMultipartFilter</filter-name>
    <filter-class>org.apache.cocoon.servlet.multipart.MultipartFilter</filter-class>
  </filter>
  <!--
  <filter>
    <filter-name>CocoonMultipartFilter</filter-name>
    <display-name>Cocoon multipart filter</display-name>
    <description>Multipart MIME handling filter for Cocoon</description>
    <filter-class>org.tizzit.classloading.tools.rcl.wrapper.servlet.ReloadingServletFilter</filter-class>
    <init-param>
      <param-name>filter-class</param-name>
      <param-value>org.apache.cocoon.servlet.multipart.MultipartFilter</param-value>
    </init-param>
  </filter>
  -->

  <!--
    - Declare a filter for debugging incoming request
    -->
  <filter>
    <description>Log debug information about each request</description>
    <display-name>Cocoon debug filter</display-name>
    <filter-name>CocoonDebugFilter</filter-name>
    <filter-class>org.apache.cocoon.servlet.DebugFilter</filter-class>
  </filter>

  <!--
    - Declare a filter for UTF-8 character encoding
  -->
  <filter>
    <description>Character Encoding filter for Cocoon</description>
    <display-name>Cocoon Character Encoding filter</display-name>
    <filter-name>SetCharacterEncoding</filter-name>
    <filter-class>org.tizzit.cocoon.generic.filters.SetCharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>

  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>

  <!-- Filter mappings ================================================ -->

  <!--
    - Use the Cocoon multipart filter together with the Cocoon demo webapp
    -->
  <filter-mapping>
    <filter-name>CocoonMultipartFilter</filter-name>
    <servlet-name>Cocoon</servlet-name>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CocoonMultipartFilter</filter-name>
    <servlet-name>DispatcherServlet</servlet-name>
  </filter-mapping>

  <!--
    - Use the Cocoon debug filter together with the Cocoon demo webapp
  <filter-mapping>
    <filter-name>CocoonDebugFilter</filter-name>
    <servlet-name>Cocoon</servlet-name>
  </filter-mapping>
    -->

  <!--
    - Use UTF-8 character encoding filter with Cocoon webapp
  -->
  <filter-mapping>
    <filter-name>SetCharacterEncoding</filter-name>
    <servlet-name>DispatcherServlet</servlet-name>
  </filter-mapping>

  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/remote/*</url-pattern>
  </filter-mapping>

  <!-- Servlet Context Listener ======================================= -->
  <listener>
    <listener-class>org.tizzit.core.classloading.ExternalLibClassLoaderInitializeListener</listener-class>
  </listener>

  <!--
    - Declare Spring context listener which sets up the Spring Application Context
    - containing all Cocoon components (and user defined beans as well).
    -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--
    - Declare Spring request listener which sets up the required RequestAttributes
    - to support Springs and Cocoon custom bean scopes like the request scope or the
    - session scope.
    -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!-- Servlet Configuration ========================================== -->

  <!--
    - Servlet that dispatches requests to the Spring managed block servlets
    -->
  <!-- RCL
  <servlet>
    <description>Cocoon blocks dispatcher</description>
    <display-name>DispatcherServlet</display-name>
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.apache.cocoon.servletservice.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  -->
  <servlet>
    <servlet-name>DispatcherServlet</servlet-name>
    <servlet-class>org.tizzit.core.classloading.ExternalLibClassLoaderInjectServlet</servlet-class>
    <init-param>
      <param-name>servlet-class</param-name>
      <param-value>org.apache.cocoon.servletservice.DispatcherServlet</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!--
    - Spring remoting servlet
    -->
  <servlet>
    <servlet-name>remote</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value> classpath:applicationContext-export-remoteServices.xml <!-- web-contextConfigLocations merge-point -->
      </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>rest</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value> classpath:applicationContext-restservice.xml <!-- web-contextConfigLocations merge-point -->
      </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- URL space mappings ============================================= -->

  <!--
    - Cocoon handles all the URL space assigned to the webapp using its sitemap.
    - It is recommended to leave it unchanged. Under some circumstances though
    - (like integration with proprietary webapps or servlets) you might have
    - to change this parameter.
    -->
  <servlet-mapping>
    <servlet-name>DispatcherServlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>

  <!--
    - Spring remoting servlet URL mapping
    -->
  <servlet-mapping>
    <servlet-name>remote</servlet-name>
    <url-pattern>/remote/*</url-pattern>
  </servlet-mapping>
  
  
  <servlet-mapping>
    <servlet-name>rest</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
</web-app>
