// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!!
// Generated by: ApplicationException.vsl in JUWIMM-andromda-java-cartridge.
//
#if ($stringUtils.isNotBlank($class.packageName))
package $class.packageName;
#end

/**
$class.getDocumentation(" * ")
 */
public class ${class.name}
#if($class.generalization)
    extends ${class.generalization.fullyQualifiedName}
#else
    extends java.lang.Exception
#end
{
    /**
     * The default constructor.
     */
    public ${class.name}()
    {}

    /**
     * Constructs a new instance of ${class.name}
     *
     * @param throwable the parent Throwable
     */
    public ${class.name}(Throwable throwable)
    {
        super(throwable);
    }

    /**
     * Constructs a new instance of ${class.name}
     *
     * @param message the throwable message.
     */
    public ${class.name}(String message)
    {
        super(message);
    }

    /**
     * Constructs a new instance of ${class.name}
     *
     * @param message the throwable message.
     * @param throwable the parent of this Throwable.
     */
    public ${class.name}(String message, Throwable throwable)
    {
        super(message, throwable);
    }

#set ($instanceAttributes = $class.instanceAttributes)
#if(!$instanceAttributes.empty)
    // --------------- attributes ---------------------
#foreach ( $attribute in $instanceAttributes)
    /** The $attribute.name property */
    private $attribute.type.fullyQualifiedName $attribute.name;

    /**
     * Get the ${attribute.name} property
$attribute.getDocumentation("     * ")
     *
     */
    public $attribute.type.fullyQualifiedName ${attribute.getterName}() {
       return $attribute.name;
    }

## Only generate a setter if the attribute is not read-only
## Note: It's no use to generate final fields for read-only attributes because
## the fields are likely to be initialized in ejbActivate() or a similiar
## method and not in the constructor.
#if (!$attribute.readOnly)
    /**
     * Set the $attribute.name property
     * @param value the new value
     */
    public void ${attribute.setterName}($attribute.type.fullyQualifiedName value) {
       this.$attribute.name = value;
    }
#end
#end
#end
}
